<section class="about-page-content">
 <h3>What's this all about?</h3>
 <p>
 We want to share your content, and we want to <strong>confirm</strong> you
 support it.
 You want to post content, but you want to <strong>never send your password
   over the Internet</strong>.
 Together, let's use OpenPGP to digitally sign and post your document <strong>without
   ever making a new account</strong>.
 </p>

 <p>
 This Web site cannot be &ldquo;signed in to&rdquo;.
 Signing into a Web site is an old, antiquated idea.
 The future will be one where you sign data locally then host it remotely.
 Only a fool would type their password into a Web page.
 </p>

 <section>
   <h4>How it works, intermediate difficulty</h4>
   <ol>
     <li>
       <em>Make an OpenPGP key using GnuPG</em>.
       The software we provide depends on GnuPG (<code>gpg</code>) &mdash;
       specifically GPGME &mdash; so you must set up your private key using
       that. If you already have a private key then you should skip this step.
<pre>$ gpg --gen-key
$ gpg --send-key</pre>
     </li>
     <li>
       <em>Add our PGP public key to your keyring</em>.
       Our software is signed with our PGP key, so add it to your keyring.
       The master keyid is <code>0xFBAE90619F653118</code>.
       The fingerprint is <code>CFAF 2EA3 467D 54D6 A571  D3F0 FBAE 9061 9F65 3118</code>.
<pre>$ gpg --recv-key 0xFBAE90619F653118
$ gpg --fingerprint 0xFBAE90619F653118</pre>
     </li>
     <li>
       <em>Download and install mkmnfst</em>.
       The mkmnfst program depends on the libcurl and GPGME libraries and a C
       compiler.
       It is known to work on OpenBSD, Debian, and OS X.
       The release is signed with our PGP key.
       Our signing subkeys are <code>0xAFBF615D7661F82A</code> and
       <code>0x029477225FB26D83</code>.
<pre>$ curl -LO https://github.com/mnfst/mkmnfst/releases/download/v0.3/mkmnfst-0.3.tar.gz
$ curl -LO https://github.com/mnfst/mkmnfst/releases/download/v0.3/mkmnfst-0.3.tar.gz.asc
$ gpg --verify mkmnfst-0.3.tar.gz.asc mkmnfst-0.3.tar.gz
$ tar -zxf mkmnfst-0.3.tar.gz
$ cd mkmnfst
$ ./configure
$ make
$ sudo make install</pre>
     </li>
     <li>
       <em>Run mkmnfst on a file</em>.
       The hard part is done.
       <pre>$ mkmnfst proclaimation-to-the-world.txt</pre>
     </li>
   </ol>

   <h4>How it works, advanced difficulty</h4>
   <h5>JSON, attached signature</h5>
   <p>
   Let <var>$SIGNED_BODY</var> be a PGP-signed message in ASCII-armored
   format.
   You <em>must</em> make sure to preserve newlines in <var>$SIGNED_BODY</var>.
   If you encounter errors, first ensure that newlines are preserved.
   </p>
   <p>
   The JSON looks like this:
   </p>
   <pre>{"status":{"signed_body":<var>$SIGNED_BODY</var>}}</pre>
   <h5>JSON, detached signature</h5>
   <p>
   Let <var>$SIGNATURE</var> be a PGP signature in ASCII-armored
   format.
   You <em>must</em> make sure to preserve newlines in <var>$SIGNATURE</var>.
   If you encounter errors, first ensure that newlines are preserved.
   </p>
   <p>Let <var>$BODY</var> be the source text for the signature.</p>
   <p>
   The JSON looks like this:
   </p>
   <pre>{"status":{"body":<var>$BODY</var>,"signature":$SIGNATURE}}</pre>
   <h5>POST</h5>
   <p>POST the JSON to <code><%= statuses_url %></code></p>
  </section>
</section>
